version: '3'

services:
  #zookeeper是kafka的依赖
  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      # 时区上海
      TZ: Asia/Shanghai
    restart: always
    ports:
      - "2181:2181"

  #消息队列
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_LISTENERS=INTERNAL://:9093,CLIENT://:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CLIENT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://127.0.0.1:9093,CLIENT://106.13.216.62:9092
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - TZ=Asia/Shanghai
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka/logs:/kafka
    depends_on:
      - zookeeper
    
  # kafka-manager: # Kafka 图形管理界面
  #   image: sheepkiller/kafka-manager:latest
  #   restart: unless-stopped
  #   container_name: kafka-manager
  #   hostname: kafka-manager
  #   ports:
  #     - "9000:9000"
  #   links:            # 连接本compose文件创建的container
  #     - kafka
  #   external_links:   # 连接外部compose文件创建的container
  #     - zookeeper

  #   environment:
  #     ZK_HOSTS: zookeeper:2181
  #     KAFKA_BROKERS: kafka:9092


# kafka监控节点
  # kafka-exporter:
  #   image: docker.io/bitnami/kafka-exporter:1.6.0
  #   container_name: kafka-exporter
  #   network_mode: host
  #   restart: always
  #   entrypoint:
  #     - kafka_exporter
  #     - --kafka.server=127.0.0.1:9092